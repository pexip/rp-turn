# Rewrite regexes for Webapp
#
# Usage: Assuming the Reverse Proxy has an FQDN of meet.example.com, the below regexes will rewrite
# http[s]://meet.example.com/VMR_ALIAS and http[s]://meet.example.com/VMR_ALIAS/PARTICIPANT_NAME
# populating the respective text fields on the Webapp portal page
#
# Example:
#
# Entering http://meet.example.com/andreas@example.com/Marius into the web browser
# will cause the Reverse Proxy to rewrite the web request to
# https://meet.example.com/webapp/?conference=andreas@example.com&name=Marius    (webapp1)
# https://meet.example.com/webapp/conference/andreas@example.com?name=Marius     (webapp2)
# so that the Webapp field named "Person or conference to dial" is pre-populated with
# andreas@example.com, and the field named "Your name" is pre-populated with Marius.
#
# Entering http://meet.example.com/andreas@example.com will cause the Reverse Proxy to rewrite the web request to
# https://meet.example.com/webapp/?conference=andreas@example.com                (webapp1)
# https://meet.example.com/webapp/conference/andreas@example.com                 (webapp2)
# so that the Webapp field named "Person or conference to dial" is pre-populated with
# andreas@example.com.

# webapp1
#rewrite ^/(?!api|webrtc|webapp|static|stats)([a-z-\.@]+)/?$ /webapp/?conference=$1 permanent;
#rewrite ^/(?!api|webrtc|webapp|static|stats)([a-z-\.@]+)/(.+)/?$ /webapp/?conference=$1&name=$2 permanent;

# webapp2
rewrite ^/(?!(api|webrtc|webapp\d*|static|stats|teams|50x.html|404.html)/?$)([a-zA-Z0-9-\.@_]+)/?$ /webapp/conference/?conference=$3 permanent;
rewrite ^/(?!(api|webrtc|webapp\d*?|static|stats|teams|50x.html|404.html)/.*$)([a-zA-Z0-9-\.@_]+)/([a-zA-Z0-9-\.@_]+)$ /webapp/conference/?conference=$3&name=$4 permanent;
